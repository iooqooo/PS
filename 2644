#include <iostream>
//#include <cstdio>
//#include <string>
#include <deque>
//#define CINOUT ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#include <algorithm>
#include <vector>

using namespace std;

int N, a, b, M, cnt;
bool visited[105];
bool is_Family;
vector<int> graph[105];
deque<int> deq;
int dist[105];

void bfs(int x){
   visited[x] = true;
   deq.push_back(x);
   while (!deq.empty()){
      int front = deq.front();
      deq.pop_front();
      bool is_remain = false;
      for (int i=0;i<graph[front].size();i++){
         int next = graph[front][i];
         if (next == b) is_Family = true;
         if (!visited[next]) {
            //printf("%d ", next);
            visited[next] = true;
            dist[next] = dist[front]+1;
            deq.push_back(next);
            is_remain = true;
         }
      }
      if (is_Family) {
           cnt = dist[b];
           return;
     }
   }
}

int main(){
   scanf("%d", &N);
   scanf("%d %d", &a, &b);
   scanf("%d", &M);
   for (int i=0;i<M;i++){
      int x, y;
      scanf("%d %d", &x, &y);
      graph[x].push_back(y);
      graph[y].push_back(x);
   }
   bfs(a);
   if (is_Family) printf("%d", cnt);
   else printf("-1");
}
